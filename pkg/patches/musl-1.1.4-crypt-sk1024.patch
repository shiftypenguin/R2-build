--- musl-1.1.4.o/src/crypt/crypt_r.c
+++ musl-1.1.4/src/crypt/crypt_r.c
@@ -8,6 +8,7 @@
 char *__crypt_blowfish(const char *, const char *, char *);
 char *__crypt_sha256(const char *, const char *, char *);
 char *__crypt_sha512(const char *, const char *, char *);
+char *__crypt_sk1024(const char *, const char *, char *);
 
 char *__crypt_r(const char *key, const char *salt, struct crypt_data *data)
 {
@@ -25,6 +26,8 @@
 			return __crypt_sha256(key, salt, output);
 		if (salt[1] == '6' && salt[2] == '$')
 			return __crypt_sha512(key, salt, output);
+		if (salt[1] == 'U' && salt[2] == '$')
+			return __crypt_sk1024(key, salt, output);
 	}
 	return __crypt_des(key, salt, output);
 }
--- /dev/null
+++ musl-1.1.4/src/crypt/crypt_sk1024.c
@@ -0,0 +1,1053 @@
+#define _BSD_SOURCE
+#include <string.h>
+#include <stdint.h>
+#include <stdio.h>
+#include <limits.h>
+#include <stdlib.h>
+#include <errno.h>
+#include <endian.h>
+
+#define SALTLEN 16
+#define DATALEN 48
+#define OFFSET 11
+#define PASSES 22005
+
+#define SLENMAX 32
+#define DLENMAX 90
+#define CLEN (DLENMAX + SLENMAX + 4 + 1)
+#define _PFX "$U$"
+#define TUNECONF "/etc/skcrypt.conf"
+
+static unsigned int saltlen = SALTLEN;
+static unsigned int datalen = DATALEN;
+static unsigned int offset = OFFSET;
+static unsigned int passes = PASSES;
+static char localid[64] = {0};
+
+#define _n(x) (sizeof(x)/sizeof(x[0]))
+
+typedef struct {
+	uint64_t K[17]; // key
+	uint64_t T[3]; // tweak
+} tf1024_ctx;
+
+#define THREEFISH_PARITY 0x1bd11bdaa9fc1a22ULL
+
+static void tfs1024_init(tf1024_ctx *ctx)
+{
+	size_t i;
+
+	ctx->K[_n(ctx->K) - 1] = THREEFISH_PARITY;
+	for (i = 0; i < _n(ctx->K) - 1; i++)
+		ctx->K[_n(ctx->K)-1] ^= ctx->K[i];
+
+	ctx->T[2] = ctx->T[0] ^ ctx->T[1];
+}
+
+static void tf1024_encrypt_blk(tf1024_ctx* ctx, const uint64_t *input, uint64_t *output)
+{
+	uint64_t b0 = input[0], b1 = input[1],
+		b2 = input[2], b3 = input[3],
+		b4 = input[4], b5 = input[5],
+		b6 = input[6], b7 = input[7],
+		b8 = input[8], b9 = input[9],
+		b10 = input[10], b11 = input[11],
+		b12 = input[12], b13 = input[13],
+		b14 = input[14], b15 = input[15];
+	uint64_t k0 = ctx->K[0], k1 = ctx->K[1],
+		k2 = ctx->K[2], k3 = ctx->K[3],
+		k4 = ctx->K[4], k5 = ctx->K[5],
+		k6 = ctx->K[6], k7 = ctx->K[7],
+		k8 = ctx->K[8], k9 = ctx->K[9],
+		k10 = ctx->K[10], k11 = ctx->K[11],
+		k12 = ctx->K[12], k13 = ctx->K[13],
+		k14 = ctx->K[14], k15 = ctx->K[15],
+		k16 = ctx->K[16];
+	uint64_t t0 = ctx->T[0], t1 = ctx->T[1],
+		t2 = ctx->T[2];
+
+		b1 += k1; b0 += b1 + k0; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k3; b2 += b3 + k2; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k5; b4 += b5 + k4; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k7; b6 += b7 + k6; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k9; b8 += b9 + k8; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k11; b10 += b11 + k10; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k13 + t0; b12 += b13 + k12; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k15; b14 += b15 + k14 + t1; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k2; b0 += b1 + k1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k4; b2 += b3 + k3; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k6; b4 += b5 + k5; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k8; b6 += b7 + k7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k10; b8 += b9 + k9; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k12; b10 += b11 + k11; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k14 + t1; b12 += b13 + k13; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k16 + 1; b14 += b15 + k15 + t2; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k3; b0 += b1 + k2; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k5; b2 += b3 + k4; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k7; b4 += b5 + k6; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k9; b6 += b7 + k8; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k11; b8 += b9 + k10; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k13; b10 += b11 + k12; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k15 + t2; b12 += b13 + k14; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k0 + 2; b14 += b15 + k16 + t0; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k4; b0 += b1 + k3; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k6; b2 += b3 + k5; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k8; b4 += b5 + k7; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k10; b6 += b7 + k9; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k12; b8 += b9 + k11; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k14; b10 += b11 + k13; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k16 + t0; b12 += b13 + k15; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k1 + 3; b14 += b15 + k0 + t1; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k5; b0 += b1 + k4; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k7; b2 += b3 + k6; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k9; b4 += b5 + k8; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k11; b6 += b7 + k10; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k13; b8 += b9 + k12; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k15; b10 += b11 + k14; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k0 + t1; b12 += b13 + k16; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k2 + 4; b14 += b15 + k1 + t2; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k6; b0 += b1 + k5; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k8; b2 += b3 + k7; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k10; b4 += b5 + k9; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k12; b6 += b7 + k11; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k14; b8 += b9 + k13; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k16; b10 += b11 + k15; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k1 + t2; b12 += b13 + k0; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k3 + 5; b14 += b15 + k2 + t0; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k7; b0 += b1 + k6; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k9; b2 += b3 + k8; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k11; b4 += b5 + k10; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k13; b6 += b7 + k12; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k15; b8 += b9 + k14; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k0; b10 += b11 + k16; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k2 + t0; b12 += b13 + k1; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k4 + 6; b14 += b15 + k3 + t1; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k8; b0 += b1 + k7; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k10; b2 += b3 + k9; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k12; b4 += b5 + k11; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k14; b6 += b7 + k13; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k16; b8 += b9 + k15; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k1; b10 += b11 + k0; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k3 + t1; b12 += b13 + k2; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k5 + 7; b14 += b15 + k4 + t2; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k9; b0 += b1 + k8; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k11; b2 += b3 + k10; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k13; b4 += b5 + k12; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k15; b6 += b7 + k14; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k0; b8 += b9 + k16; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k2; b10 += b11 + k1; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k4 + t2; b12 += b13 + k3; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k6 + 8; b14 += b15 + k5 + t0; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k10; b0 += b1 + k9; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k12; b2 += b3 + k11; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k14; b4 += b5 + k13; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k16; b6 += b7 + k15; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k1; b8 += b9 + k0; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k3; b10 += b11 + k2; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k5 + t0; b12 += b13 + k4; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k7 + 9; b14 += b15 + k6 + t1; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k11; b0 += b1 + k10; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k13; b2 += b3 + k12; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k15; b4 += b5 + k14; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k0; b6 += b7 + k16; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k2; b8 += b9 + k1; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k4; b10 += b11 + k3; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k6 + t1; b12 += b13 + k5; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k8 + 10; b14 += b15 + k7 + t2; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k12; b0 += b1 + k11; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k14; b2 += b3 + k13; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k16; b4 += b5 + k15; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k1; b6 += b7 + k0; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k3; b8 += b9 + k2; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k5; b10 += b11 + k4; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k7 + t2; b12 += b13 + k6; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k9 + 11; b14 += b15 + k8 + t0; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k13; b0 += b1 + k12; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k15; b2 += b3 + k14; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k0; b4 += b5 + k16; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k2; b6 += b7 + k1; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k4; b8 += b9 + k3; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k6; b10 += b11 + k5; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k8 + t0; b12 += b13 + k7; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k10 + 12; b14 += b15 + k9 + t1; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k14; b0 += b1 + k13; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k16; b2 += b3 + k15; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k1; b4 += b5 + k0; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k3; b6 += b7 + k2; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k5; b8 += b9 + k4; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k7; b10 += b11 + k6; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k9 + t1; b12 += b13 + k8; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k11 + 13; b14 += b15 + k10 + t2; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k15; b0 += b1 + k14; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k0; b2 += b3 + k16; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k2; b4 += b5 + k1; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k4; b6 += b7 + k3; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k6; b8 += b9 + k5; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k8; b10 += b11 + k7; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k10 + t2; b12 += b13 + k9; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k12 + 14; b14 += b15 + k11 + t0; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k16; b0 += b1 + k15; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k1; b2 += b3 + k0; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k3; b4 += b5 + k2; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k5; b6 += b7 + k4; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k7; b8 += b9 + k6; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k9; b10 += b11 + k8; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k11 + t0; b12 += b13 + k10; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k13 + 15; b14 += b15 + k12 + t1; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k0; b0 += b1 + k16; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k2; b2 += b3 + k1; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k4; b4 += b5 + k3; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k6; b6 += b7 + k5; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k8; b8 += b9 + k7; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k10; b10 += b11 + k9; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k12 + t1; b12 += b13 + k11; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k14 + 16; b14 += b15 + k13 + t2; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k1; b0 += b1 + k0; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k3; b2 += b3 + k2; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k5; b4 += b5 + k4; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k7; b6 += b7 + k6; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k9; b8 += b9 + k8; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k11; b10 += b11 + k10; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k13 + t2; b12 += b13 + k12; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k15 + 17; b14 += b15 + k14 + t0; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+		b1 += k2; b0 += b1 + k1; b1 = ((b1 << 24) | (b1 >> (64 - 24))) ^ b0;
+		b3 += k4; b2 += b3 + k3; b3 = ((b3 << 13) | (b3 >> (64 - 13))) ^ b2;
+		b5 += k6; b4 += b5 + k5; b5 = ((b5 << 8) | (b5 >> (64 - 8))) ^ b4;
+		b7 += k8; b6 += b7 + k7; b7 = ((b7 << 47) | (b7 >> (64 - 47))) ^ b6;
+		b9 += k10; b8 += b9 + k9; b9 = ((b9 << 8) | (b9 >> (64 - 8))) ^ b8;
+		b11 += k12; b10 += b11 + k11; b11 = ((b11 << 17) | (b11 >> (64 - 17))) ^ b10;
+		b13 += k14 + t0; b12 += b13 + k13; b13 = ((b13 << 22) | (b13 >> (64 - 22))) ^ b12;
+		b15 += k16 + 18; b14 += b15 + k15 + t1; b15 = ((b15 << 37) | (b15 >> (64 - 37))) ^ b14;
+		b0 += b9; b9 = ((b9 << 38) | (b9 >> (64 - 38))) ^ b0;
+		b2 += b13; b13 = ((b13 << 19) | (b13 >> (64 - 19))) ^ b2;
+		b6 += b11; b11 = ((b11 << 10) | (b11 >> (64 - 10))) ^ b6;
+		b4 += b15; b15 = ((b15 << 55) | (b15 >> (64 - 55))) ^ b4;
+		b10 += b7; b7 = ((b7 << 49) | (b7 >> (64 - 49))) ^ b10;
+		b12 += b3; b3 = ((b3 << 18) | (b3 >> (64 - 18))) ^ b12;
+		b14 += b5; b5 = ((b5 << 23) | (b5 >> (64 - 23))) ^ b14;
+		b8 += b1; b1 = ((b1 << 52) | (b1 >> (64 - 52))) ^ b8;
+		b0 += b7; b7 = ((b7 << 33) | (b7 >> (64 - 33))) ^ b0;
+		b2 += b5; b5 = ((b5 << 4) | (b5 >> (64 - 4))) ^ b2;
+		b4 += b3; b3 = ((b3 << 51) | (b3 >> (64 - 51))) ^ b4;
+		b6 += b1; b1 = ((b1 << 13) | (b1 >> (64 - 13))) ^ b6;
+		b12 += b15; b15 = ((b15 << 34) | (b15 >> (64 - 34))) ^ b12;
+		b14 += b13; b13 = ((b13 << 41) | (b13 >> (64 - 41))) ^ b14;
+		b8 += b11; b11 = ((b11 << 59) | (b11 >> (64 - 59))) ^ b8;
+		b10 += b9; b9 = ((b9 << 17) | (b9 >> (64 - 17))) ^ b10;
+		b0 += b15; b15 = ((b15 << 5) | (b15 >> (64 - 5))) ^ b0;
+		b2 += b11; b11 = ((b11 << 20) | (b11 >> (64 - 20))) ^ b2;
+		b6 += b13; b13 = ((b13 << 48) | (b13 >> (64 - 48))) ^ b6;
+		b4 += b9; b9 = ((b9 << 41) | (b9 >> (64 - 41))) ^ b4;
+		b14 += b1; b1 = ((b1 << 47) | (b1 >> (64 - 47))) ^ b14;
+		b8 += b5; b5 = ((b5 << 28) | (b5 >> (64 - 28))) ^ b8;
+		b10 += b3; b3 = ((b3 << 16) | (b3 >> (64 - 16))) ^ b10;
+		b12 += b7; b7 = ((b7 << 25) | (b7 >> (64 - 25))) ^ b12;
+		b1 += k3; b0 += b1 + k2; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b0;
+		b3 += k5; b2 += b3 + k4; b3 = ((b3 << 9) | (b3 >> (64 - 9))) ^ b2;
+		b5 += k7; b4 += b5 + k6; b5 = ((b5 << 37) | (b5 >> (64 - 37))) ^ b4;
+		b7 += k9; b6 += b7 + k8; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b6;
+		b9 += k11; b8 += b9 + k10; b9 = ((b9 << 12) | (b9 >> (64 - 12))) ^ b8;
+		b11 += k13; b10 += b11 + k12; b11 = ((b11 << 47) | (b11 >> (64 - 47))) ^ b10;
+		b13 += k15 + t1; b12 += b13 + k14; b13 = ((b13 << 44) | (b13 >> (64 - 44))) ^ b12;
+		b15 += k0 + 19; b14 += b15 + k16 + t2; b15 = ((b15 << 30) | (b15 >> (64 - 30))) ^ b14;
+		b0 += b9; b9 = ((b9 << 16) | (b9 >> (64 - 16))) ^ b0;
+		b2 += b13; b13 = ((b13 << 34) | (b13 >> (64 - 34))) ^ b2;
+		b6 += b11; b11 = ((b11 << 56) | (b11 >> (64 - 56))) ^ b6;
+		b4 += b15; b15 = ((b15 << 51) | (b15 >> (64 - 51))) ^ b4;
+		b10 += b7; b7 = ((b7 << 4) | (b7 >> (64 - 4))) ^ b10;
+		b12 += b3; b3 = ((b3 << 53) | (b3 >> (64 - 53))) ^ b12;
+		b14 += b5; b5 = ((b5 << 42) | (b5 >> (64 - 42))) ^ b14;
+		b8 += b1; b1 = ((b1 << 41) | (b1 >> (64 - 41))) ^ b8;
+		b0 += b7; b7 = ((b7 << 31) | (b7 >> (64 - 31))) ^ b0;
+		b2 += b5; b5 = ((b5 << 44) | (b5 >> (64 - 44))) ^ b2;
+		b4 += b3; b3 = ((b3 << 47) | (b3 >> (64 - 47))) ^ b4;
+		b6 += b1; b1 = ((b1 << 46) | (b1 >> (64 - 46))) ^ b6;
+		b12 += b15; b15 = ((b15 << 19) | (b15 >> (64 - 19))) ^ b12;
+		b14 += b13; b13 = ((b13 << 42) | (b13 >> (64 - 42))) ^ b14;
+		b8 += b11; b11 = ((b11 << 44) | (b11 >> (64 - 44))) ^ b8;
+		b10 += b9; b9 = ((b9 << 25) | (b9 >> (64 - 25))) ^ b10;
+		b0 += b15; b15 = ((b15 << 9) | (b15 >> (64 - 9))) ^ b0;
+		b2 += b11; b11 = ((b11 << 48) | (b11 >> (64 - 48))) ^ b2;
+		b6 += b13; b13 = ((b13 << 35) | (b13 >> (64 - 35))) ^ b6;
+		b4 += b9; b9 = ((b9 << 52) | (b9 >> (64 - 52))) ^ b4;
+		b14 += b1; b1 = ((b1 << 23) | (b1 >> (64 - 23))) ^ b14;
+		b8 += b5; b5 = ((b5 << 31) | (b5 >> (64 - 31))) ^ b8;
+		b10 += b3; b3 = ((b3 << 37) | (b3 >> (64 - 37))) ^ b10;
+		b12 += b7; b7 = ((b7 << 20) | (b7 >> (64 - 20))) ^ b12;
+
+		output[0] = b0 + k3;
+		output[1] = b1 + k4;
+		output[2] = b2 + k5;
+		output[3] = b3 + k6;
+		output[4] = b4 + k7;
+		output[5] = b5 + k8;
+		output[6] = b6 + k9;
+		output[7] = b7 + k10;
+		output[8] = b8 + k11;
+		output[9] = b9 + k12;
+		output[10] = b10 + k13;
+		output[11] = b11 + k14;
+		output[12] = b12 + k15;
+		output[13] = b13 + k16 + t2;
+		output[14] = b14 + k0 + t0;
+		output[15] = b15 + k1 + 20;
+}
+
+#define SKEIN_VERSION 1
+#define SKEIN_ID 0x33414853 // LE: "SHA3"
+
+#define SKEIN_BLOCK_CFG ((uint64_t)4 << 56)
+#define SKEIN_BLOCK_MSG ((uint64_t)48 << 56)
+#define SKEIN_BLOCK_OUT ((uint64_t)63 << 56)
+
+#define SKEIN_FLAG_FIRST ((uint64_t)1 << 62)
+#define SKEIN_FLAG_LAST ((uint64_t)1 << 63)
+
+typedef struct {
+	tf1024_ctx tf; // threefish struct
+	size_t hl, bl; // hash length (1024) and buffer length
+	uint8_t B[128]; // temporary buffer for update()
+} sk1024_ctx;
+
+static void skput64lsb(uint8_t *dst, const uint64_t *src, size_t l)
+{
+	size_t n;
+
+	for (n = 0; n < l; n++)
+		dst[n] = (uint8_t)(src[n>>3] >> (8*(n&7)));
+}
+
+static void skget64lsb(uint64_t *dst, const uint8_t *src, size_t l)
+{
+	size_t n;
+
+	for (n = 0; n<8*l; n += 8)
+		dst[n/8] = (((uint64_t) src[n])) +
+			(((uint64_t)src[n+1]) << 8) +
+			(((uint64_t)src[n+2]) << 16) +
+			(((uint64_t)src[n+3]) << 24) +
+			(((uint64_t)src[n+4]) << 32) +
+			(((uint64_t)src[n+5]) << 40) +
+			(((uint64_t)src[n+6]) << 48) +
+			(((uint64_t)src[n+7]) << 56);
+}
+
+static void sk1024_process_blk(sk1024_ctx *ctx, const uint8_t *in, size_t bnum, size_t l)
+{
+	uint64_t x[16], y[16];
+	size_t i;
+
+	do {
+		ctx->tf.T[0] += l;
+
+		skget64lsb(x, in, _n(x));
+		in += sizeof(x);
+
+		tfs1024_init(&ctx->tf);
+		tf1024_encrypt_blk(&ctx->tf, x, y);
+		for (i = 0; i < 16; i++)
+			ctx->tf.K[i] = y[i] ^ x[i];
+
+		ctx->tf.T[1] &= ~SKEIN_FLAG_FIRST;
+	} while (--bnum);
+}
+
+static void sk1024_init(sk1024_ctx *ctx, size_t hbits)
+{
+	uint64_t cfg[16];
+
+	ctx->hl = hbits;
+	ctx->bl = 0;
+
+	memset(cfg, 0, sizeof(cfg));
+	cfg[0] = htole64(((uint64_t) SKEIN_VERSION << 32) + SKEIN_ID);
+	cfg[1] = htole64(hbits);
+
+	ctx->tf.T[0] = 0;
+	ctx->tf.T[1] = SKEIN_BLOCK_CFG | SKEIN_FLAG_FIRST | SKEIN_FLAG_LAST;
+
+	memset(ctx->tf.K, 0, sizeof(ctx->tf.K));
+	sk1024_process_blk(ctx, (uint8_t *)cfg, 1, 32);
+
+	ctx->tf.T[0] = 0;
+	ctx->tf.T[1] = SKEIN_BLOCK_MSG | SKEIN_FLAG_FIRST;
+}
+
+static void sk1024_update(sk1024_ctx *ctx, const void *msg, size_t l)
+{
+	const uint8_t *umsg = msg;
+	size_t n;
+
+	if (l + ctx->bl > 128) {
+		if (ctx->bl) {
+			n = 128 - ctx->bl;
+			if (n) {
+				memcpy(&ctx->B[ctx->bl], umsg, n);
+				l -= n;
+				umsg += n;
+				ctx->bl += n;
+			}
+			sk1024_process_blk(ctx, ctx->B, 1, 128);
+			ctx->bl = 0;
+		}
+
+		if (l > 128) {
+			n = (l-1) / 128;
+			sk1024_process_blk(ctx, umsg, n, 128);
+			l -= n * 128;
+			umsg += n * 128;
+		}
+	}
+
+	if (l) {
+		memcpy(&ctx->B[ctx->bl], umsg, l);
+		ctx->bl += l;
+	}
+}
+
+static void sk1024_final(sk1024_ctx *ctx, void *outhash)
+{
+	uint8_t *hash = outhash;
+	uint64_t key[16];
+	size_t i, b, n;
+
+	if (ctx->bl < 128)
+		memset(ctx->B + ctx->bl, 0, 128 - ctx->bl);
+	ctx->tf.T[1] |= SKEIN_FLAG_LAST;
+	sk1024_process_blk(ctx, ctx->B, 1, ctx->bl);
+
+	b = (ctx->hl + 7) / 8;
+
+	memset(ctx->B, 0, sizeof(ctx->B));
+	memcpy(key, ctx->tf.K, sizeof(key));
+
+	for (i = 0; i * 128 < b; i++) {
+		((uint64_t *)ctx->B)[0] = htole64((uint64_t)i);
+		ctx->tf.T[0] = 0;
+		ctx->tf.T[1] = SKEIN_BLOCK_OUT | SKEIN_FLAG_FIRST | SKEIN_FLAG_LAST;
+		ctx->bl = 0;
+
+		sk1024_process_blk(ctx, ctx->B, 1, sizeof(uint64_t));
+		n = b - i*128;
+		if (n >= 128) n = 128;
+		skput64lsb(hash+i*128, ctx->tf.K, n);
+		memcpy(ctx->tf.K, key, sizeof(key));
+	}
+}
+
+static void sk1024(const void *src, size_t slen, void *dst, size_t hbits)
+{
+	sk1024_ctx ctx; memset(&ctx, 0, sizeof(sk1024_ctx));
+
+	sk1024_init(&ctx, hbits);
+	sk1024_update(&ctx, src, slen);
+	sk1024_final(&ctx, dst);
+
+	memset(&ctx, 0, sizeof(sk1024_ctx));
+}
+
+static const char b64[] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
+
+static void b64_encode(char *dst, const unsigned char *src, size_t length)
+{
+	unsigned char in[3] = {0};
+	char *p = NULL;
+	int i, len = 0;
+	int j = 0;
+
+	dst[0] = '\0'; p = dst;
+	while (j < length) {
+		len = 0;
+		for (i=0; i<3; i++) {
+			in[i] = (unsigned char) src[j];
+			if (j < length) {
+				len++; j++;
+			}
+			else in[i] = 0;
+		}
+		if (len) {
+			p[0] = b64[in[0] >> 2];
+			p[1] = b64[((in[0] & 0x03) << 4) | ((in[1] & 0xf0) >> 4)];
+			p[2] = (unsigned char) (len > 1 ? b64[((in[1] & 0x0f) << 2) |
+				((in[2] & 0xc0) >> 6)] : '=');
+			p[3] = (unsigned char) (len > 2 ? b64[in[2] & 0x3f] : '=');
+			p[4] = '\0';
+			p += 4;
+		}
+	}
+}
+
+static void stripchr(char *s, const char *rem)
+{
+	const char *rst = rem;
+	char *d = s;
+	int add = 0;
+
+	while (*s) {
+		while (*rem) {
+			if (*s != *rem) add = 1;
+			else { add = 0; break; }
+			rem++;
+		}
+
+		if (add) *d++ = *s;
+
+		s++;
+		rem = rst;
+	}
+
+	memset(d, 0, s-d);
+}
+
+static void juggle(const char *inp1, const char *inp2, const char *inp3, unsigned char *out)
+{
+	sk1024_ctx ctx; memset(&ctx, 0, sizeof(sk1024_ctx));
+	int i;
+
+	sk1024_init(&ctx, 1024);
+	sk1024_update(&ctx, inp1, strnlen(inp1, DATALEN));
+	sk1024_update(&ctx, inp2, strnlen(inp2, DATALEN));
+	sk1024_update(&ctx, inp3, strnlen(inp3, DATALEN));
+	sk1024_final(&ctx, out);
+
+	for (i = 0; i < passes; i++) sk1024(out, 128, out, 1024);
+}
+
+static int readconfig(void)
+{
+	FILE *f;
+	char buf[256] = {0};
+	char *t, *n;
+
+	f = fopen(TUNECONF, "r");
+	if (f) {
+/*
+		The config is:
+		passes = PASSES
+		offset = OFFSET
+		localid = hello world foo bar
+		slen = SALTLEN
+		dlen = DATALEN
+*/
+		while (fgets(buf, 256, f) != NULL) {
+			if (buf[0] == '\n' || buf[0] == '#') continue;
+			buf[strnlen(buf, 256)-1] = '\0';
+			t = strtok(buf, " = ");
+			if (!t) continue;
+			n = strtok(NULL, "=");
+			if (!n) continue;
+			if (n[0] == ' ') *n++;
+
+			if (!strcmp(t, "passes")) {
+				passes = atoi(n);
+				continue;
+			}
+			if (!strcmp(t, "offset")) {
+				offset = atoi(n);
+				continue;
+			}
+			if (!strcmp(t, "localid")) {
+				strncpy(localid, n, 64);
+				continue;
+			}
+			if (!strcmp(t, "slen")) {
+				saltlen = atoi(n);
+				continue;
+			}
+			if (!strcmp(t, "dlen")) {
+				datalen = atoi(n);
+				continue;
+			}
+		}
+		fclose(f);
+
+		if (passes == 0)		passes = PASSES;
+		if (passes == UINT_MAX)		passes = 0;
+		if (offset == 0)		offset = OFFSET;
+		if (offset >= 64)		offset = 64;
+		if (saltlen == 0)		saltlen = SALTLEN;
+		if (saltlen == UINT_MAX)	saltlen = 0;
+		if (saltlen >= SLENMAX)		saltlen = SLENMAX;
+		if (datalen == 0)		datalen = DATALEN;
+		if (datalen >= DLENMAX)		datalen = DLENMAX;
+	}
+	else return 1;
+
+	return 0;
+}
+
+char *__crypt_sk1024(const char *clear, const char *salt, char *output)
+{
+	char buf[CLEN * 2] = {0}, buf2[CLEN * 2] = {0};
+	unsigned char hashbytes[128] = {0};
+	char slt[128] = {0};
+	int slen = 0;
+	char *p = output;
+
+	readconfig();
+
+	/* Process salt */
+	if (salt[0] == _PFX[0] && salt[1] == _PFX[1] && salt[2] == _PFX[2]) {
+		const char *s, *d;
+		s = salt+3; // skip _PFX
+		d = strchr(s, _PFX[0]);
+		if (!d) d = s;
+		slen = (d-s) > saltlen ? saltlen : (d-s);
+		strncpy(slt, s, slen);
+	}
+	else {
+		*p = '*';
+		goto _ret;
+	}
+
+	/* crypt and convert to base64 */
+	juggle(clear, slt, localid, hashbytes);
+	b64_encode(buf, hashbytes, sizeof(hashbytes));
+	stripchr(buf, "./+=");
+	memset(hashbytes, 0, sizeof(hashbytes));
+	strncpy(buf2, buf+offset, datalen);
+	memset(buf, 0, sizeof(buf));
+	strncpy(buf, buf2, datalen);
+	memset(buf2, 0, sizeof(buf2));
+
+	/* Return result */
+	snprintf(p, datalen+1 + saltlen + 4, _PFX"%s$%s", slt, buf);
+
+	memset(buf, 0, sizeof(buf));
+	memset(slt, 0, sizeof(slt));
+
+_ret:
+	return p;
+}
